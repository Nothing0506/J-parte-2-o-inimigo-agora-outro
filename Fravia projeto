
int verificarPino(int n, int jogada, int joColuna, int *discosNUM, int JogoNUM[][MAX]){
	if(joColuna>3 || joColuna<1){//certifica-se que a jogada do pino é valida
		do{
			cout<<"Pino invalido. Digite novamente"<<endl;
			cin>>joColuna;
		}while(jogada>n || jogada<1);
	}
    int esco, auxiLinha, auxiColuna;
        auxiLinha=DisLinha(n, jogada, discosNUM,JogoNUM);
        auxiColuna=lugarDis(n, jogada, discosNUM,JogoNUM);
        joColuna=(n+2)*joColuna;
        if(joColuna==auxiColuna){//se o disco já estiver no pino escolhido, o pino de jogada devera ser alterado
        	do{
        		cout<<"O disco ja esta nessa coluna. Escolha outra"<<endl;
        			cin>>joColuna;
        				joColuna=(n+2)*joColuna;
			}while(joColuna==auxiColuna);
		}
    for(int i=0; i<n; i++){//faz uma busca de valores pelo pino escolhido
            if(JogoNUM[i][joColuna]!=0 && auxiLinha!=0){//caso algum valor do pino seja diferente de 0, o programa entra nas condições para certifica-se se ainda é posspivel jogar naquele pino
                if(JogoNUM[i][joColuna]<jogada){//se o valor de um disco no pino for menor que o do disco escolhido na jogada, o programa não permite essa jogada
                    do{
                        cout<<"O disco nao pode ser movido para essa posicao, pois ha um outro disco menor no local"<<endl;
                        cout<<"Deseja escolher outro pino ou outro disco?"<<endl;
                        cout<<"1. PINO  2.DISCO"<<endl;//da a escolha ao jogador de trocar o disco que ele deseja jogar, ou de apenas trocar o pino o qual deseja inserir o disco já escolhido
                            cin>>esco;
                        if(esco==2){
                            cout<<"Escolha outro disco"<<endl;
                                cin>>jogada;
                            jogada=verificarDisco(n, jogada, discosNUM,JogoNUM);
                            cout<<"Escolha o pino para jogar"<<endl;
                                cin>>joColuna;
                                joColuna=(n+2)*joColuna;
                        }
                        if(esco==1){
                            cout<<"Escolha o outro pino para jogar"<<endl;
                                cin>>joColuna;
                                joColuna=(n+2)*joColuna;
                        }
                    }while(JogoNUM[i][joColuna]<jogada && JogoNUM[i][joColuna]!=0);
                }
            }
        }
    return joColuna;
}


int movimento(int n, int jogada, int joColuna, int *discosNUM, int JogoNUM[][MAX], char Jogo[][MAX], char discos[][DisMAX]){//realiza o movimento do disco na versão NUMERICA

    int auxiLinha, auxiColuna, linha;

        auxiLinha=DisLinha(n, jogada, discosNUM,JogoNUM);
        auxiColuna=lugarDis(n, jogada, discosNUM,JogoNUM);
        linha=0;

    for(int i=n; i>=0; i=i-1){
        
        if(JogoNUM[i][joColuna]==0){
            linha=i;
            break;
        }

    }

        JogoNUM[linha][joColuna]=jogada;
        JogoNUM[auxiLinha][auxiColuna]=0;

    return linha;

}


void removerDisco(int n, int jogada, int joColuna, int *discosNUM, int JogoNUM[][MAX], char Jogo[][MAX], char discos[][DisMAX]){//Remove o disco do local original na versão CARACTERE

    int auxiLinha, auxiColuna, auxi;

            auxiLinha=DisLinha(n, jogada, discosNUM,JogoNUM);
            auxiColuna=lugarDis(n, jogada, discosNUM,JogoNUM);
                auxi=jogada-1;
        
        for(int j=auxiColuna-auxi; j<=auxiColuna+auxi ; j++){
                Jogo[auxiLinha][j]=' ';
        }

        Jogo[auxiLinha][auxiColuna]='|';
        
}


void moveDisco(int n, int jogada, int joColuna, int *discosNUM, int JogoNUM[][MAX], char Jogo[][MAX], char discos[][DisMAX]){//Coloca o disco no novo local na versão CARACTERE

    int linha, auxi, auxi2;
        linha=movimento(n, jogada, joColuna, discosNUM,JogoNUM, Jogo, discos);
            auxi=0;
                auxi2=jogada-1;

        for(int j=joColuna-auxi2; j<=joColuna+auxi2 ; j++){
                Jogo[linha][j]=discos[auxi2][auxi];
                auxi++;
        }
        
        printar(n, Jogo, discos);

}


int vitoria(int n, int JogoNUM[][MAX]){//Busca no jogo NUMERICO se todos os discos estão no último pino em ordem crescente para assim declarar vitória

    int valor;
    valor=0;

    for(int i=0; i<n; i++){
        
        if(JogoNUM[i][(n+2)*3]==i+1){
            valor++;
        }

    }

    return valor;

}

